# Generated by Django 4.1.4 on 2024-11-16 08:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FaqCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'FAQ Categories',
            },
        ),
        migrations.CreateModel(
            name='NtcCustomerCare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('contact', models.CharField(db_index=True, max_length=255, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True, validators=[django.core.validators.EmailValidator()])),
                ('address', models.TextField()),
                ('location', models.CharField(db_index=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NtcFaq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='NtcPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NtcService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(help_text='Name of the service category', max_length=255, unique=True)),
                ('description', models.TextField(help_text='Detailed description of the category')),
            ],
            options={
                'verbose_name_plural': 'Service Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='ntc.servicecategory')),
            ],
            options={
                'verbose_name_plural': 'Service Sub Categories',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='servicecategory',
            index=models.Index(fields=['name'], name='ntc_service_name_284009_idx'),
        ),
        migrations.AddField(
            model_name='ntcservice',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='ntc.servicecategory'),
        ),
        migrations.AddField(
            model_name='ntcservice',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='ntc.servicesubcategory'),
        ),
        migrations.AddField(
            model_name='ntcpackage',
            name='services',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ntc.ntcservice'),
        ),
        migrations.AddField(
            model_name='ntcfaq',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='ntc.faqcategory'),
        ),
        migrations.AddIndex(
            model_name='ntccustomercare',
            index=models.Index(fields=['name'], name='ntc_ntccust_name_35373f_idx'),
        ),
        migrations.AddIndex(
            model_name='ntccustomercare',
            index=models.Index(fields=['contact'], name='ntc_ntccust_contact_6b836d_idx'),
        ),
        migrations.AddIndex(
            model_name='ntccustomercare',
            index=models.Index(fields=['location'], name='ntc_ntccust_locatio_e092d3_idx'),
        ),
        migrations.AddIndex(
            model_name='servicesubcategory',
            index=models.Index(fields=['name'], name='ntc_service_name_95d177_idx'),
        ),
        migrations.AddIndex(
            model_name='servicesubcategory',
            index=models.Index(fields=['category', 'name'], name='ntc_service_categor_48529f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='servicesubcategory',
            unique_together={('category', 'name')},
        ),
        migrations.AddIndex(
            model_name='ntcservice',
            index=models.Index(fields=['name'], name='ntc_ntcserv_name_05f415_idx'),
        ),
        migrations.AddIndex(
            model_name='ntcservice',
            index=models.Index(fields=['category', 'subcategory'], name='ntc_ntcserv_categor_1c8683_idx'),
        ),
        migrations.AddIndex(
            model_name='ntcpackage',
            index=models.Index(fields=['name'], name='ntc_ntcpack_name_f6107f_idx'),
        ),
        migrations.AddIndex(
            model_name='ntcfaq',
            index=models.Index(fields=['category'], name='ntc_ntcfaq_categor_f14bdd_idx'),
        ),
    ]
